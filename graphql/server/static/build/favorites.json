{
  "sol": [
    {
      "label": "SOL - Stream Serum Instruction History",
      "query": "subscription($account: String!){\n  serumInstructionHistory(account: $account){\n    instruction {\n      __typename\n  \t\t\n      ...on UndecodedInstruction {\n        programIDIndex\n        accountCount\n        rawAccounts:accounts\n        dataLength\n        data\n        error\n    \t}\n \t\t\t\n      ...on  SerumNewOrder {\n        side\n        limitPrice\n        maxQuantity\n        orderType\n        clientID\n        accounts {\n          market {\n            ...AccountFragment\n          }\n          openOrders {\n            ...AccountFragment\n          }\n          requestQueue {\n            ...AccountFragment\n          }\n          payer {\n            ...AccountFragment\n          }\n          owner {\n            ...AccountFragment\n          }\n          coinVault {\n            ...AccountFragment\n          }\n          pcVault {\n            ...AccountFragment\n          }\n          splTokenProgram {\n            ...AccountFragment\n          }\n          rent {\n            ...AccountFragment\n          }\n          srmDiscount {\n            ...AccountFragment\n          }           \n        }\n      }\n      ...on SerumMatchOrder{\n        limit\n        accounts {\n          market {\n            ...AccountFragment\n          }\n          requestQueue {\n            ...AccountFragment\n          }\n          eventQueue {\n            ...AccountFragment\n          }\n          bids {\n            ...AccountFragment\n          }\n          asks {\n            ...AccountFragment\n          }\n          coinFeeReceivable {\n            ...AccountFragment\n          }\n          pcFeeReceivable {\n            ...AccountFragment\n          }\n        }\n      }\n      ...on SerumCancelOrder{\n        side\n        orderId\n        openOrders\n        openOrderSlot\n        accounts{\n          market {\n            ...AccountFragment\n          }\n          requestQueue {\n            ...AccountFragment\n          }\n          owner {\n            ...AccountFragment\n          }\n        }\n      }\n      ...on SerumSettleFunds {\n        __typename\n        accounts{\n          market {\n            ...AccountFragment\n          }\n          openOrders {\n            ...AccountFragment\n          }\n          owner {\n            ...AccountFragment\n          }\n          coinVault {\n            ...AccountFragment\n          }\n          pcVault {\n            ...AccountFragment\n          }\n          pcWallet {\n            ...AccountFragment\n          }\n          signer {\n            ...AccountFragment\n          }\n          splTokenProgram {\n            ...AccountFragment\n          }                    \n        }\n      }\n      ...on SerumCancelOrderByClientId{\n        clientID\n        accounts{\n          market {\n            ...AccountFragment\n          }\n          openOrders {\n            ...AccountFragment\n          }\n          requestQueue {\n            ...AccountFragment\n          }\n          owner {\n            ...AccountFragment\n          }\n        }\n      }\n    }\n  }\n}\n\nfragment AccountFragment on Account {\n  publicKey\n  isSigner\n  isWritable\n}",
      "variables": {
        "mainnet": "{\n  \"account\": \"YOUR-ACCOUNT-HERE\"\n}",
        "local": "{\n  \"account\": \"YOUR-ACCOUNT-HERE\"\n}"
      }
    },
    {
      "label": "SOL - Get all token metadatas",
      "query": "query{\n  splTokens {\n    address\n    mintAddress\n    mintAuthority\n    freezeAuthority\n    supply\n    decimals\n    symbol\n  }\n}\n\n",
      "variables": {
      }
    },
    {
      "label": "SOL - Get token metadata for a specific address",
      "query": "query ($account: String!){\n  splToken(address:$account) {\n    address\n    mintAddress\n    mintAuthority\n    freezeAuthority\n    supply\n    decimals\n    symbol\n  }\n}",
      "variables": {
        "mainnet": "{\n  \"account\": \"YOUR-ACCOUNT-HERE\"\n}",
        "local": "{\n  \"account\": \"YOUR-ACCOUNT-HERE\"\n}"
      }
    }
  ]
}
