// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dfuse/solana/serum/v1/rows.proto

package pbserum

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Fill struct {
	Pubkey  []byte `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	OrderId uint64 `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// Side, if false, then is_bid
	IsAsk                bool     `protobuf:"varint,3,opt,name=is_ask,json=isAsk,proto3" json:"is_ask,omitempty"`
	Maker                bool     `protobuf:"varint,4,opt,name=maker,proto3" json:"maker,omitempty"`
	NativeQtyPaid        uint64   `protobuf:"varint,5,opt,name=native_qty_paid,json=nativeQtyPaid,proto3" json:"native_qty_paid,omitempty"`
	NativeQtyReceived    uint64   `protobuf:"varint,6,opt,name=native_qty_received,json=nativeQtyReceived,proto3" json:"native_qty_received,omitempty"`
	NativeFeeOrRebate    uint64   `protobuf:"varint,7,opt,name=native_fee_or_rebate,json=nativeFeeOrRebate,proto3" json:"native_fee_or_rebate,omitempty"`
	FeeTier              string   `protobuf:"bytes,8,opt,name=fee_tier,json=feeTier,proto3" json:"fee_tier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fill) Reset()         { *m = Fill{} }
func (m *Fill) String() string { return proto.CompactTextString(m) }
func (*Fill) ProtoMessage()    {}
func (*Fill) Descriptor() ([]byte, []int) {
	return fileDescriptor_f16b2d744fd262c8, []int{0}
}

func (m *Fill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fill.Unmarshal(m, b)
}
func (m *Fill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fill.Marshal(b, m, deterministic)
}
func (m *Fill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fill.Merge(m, src)
}
func (m *Fill) XXX_Size() int {
	return xxx_messageInfo_Fill.Size(m)
}
func (m *Fill) XXX_DiscardUnknown() {
	xxx_messageInfo_Fill.DiscardUnknown(m)
}

var xxx_messageInfo_Fill proto.InternalMessageInfo

func (m *Fill) GetPubkey() []byte {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *Fill) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

func (m *Fill) GetIsAsk() bool {
	if m != nil {
		return m.IsAsk
	}
	return false
}

func (m *Fill) GetMaker() bool {
	if m != nil {
		return m.Maker
	}
	return false
}

func (m *Fill) GetNativeQtyPaid() uint64 {
	if m != nil {
		return m.NativeQtyPaid
	}
	return 0
}

func (m *Fill) GetNativeQtyReceived() uint64 {
	if m != nil {
		return m.NativeQtyReceived
	}
	return 0
}

func (m *Fill) GetNativeFeeOrRebate() uint64 {
	if m != nil {
		return m.NativeFeeOrRebate
	}
	return 0
}

func (m *Fill) GetFeeTier() string {
	if m != nil {
		return m.FeeTier
	}
	return ""
}

func init() {
	proto.RegisterType((*Fill)(nil), "dfuse.solana.serum.v1.Fill")
}

func init() { proto.RegisterFile("dfuse/solana/serum/v1/rows.proto", fileDescriptor_f16b2d744fd262c8) }

var fileDescriptor_f16b2d744fd262c8 = []byte{
	// 290 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xd9, 0xda, 0x6e, 0x6b, 0x50, 0xc4, 0xd8, 0x4a, 0xbc, 0x2d, 0x1e, 0x64, 0x2f, 0x6e,
	0x28, 0x1e, 0x3d, 0x55, 0xa1, 0xe0, 0x49, 0x5d, 0x3c, 0x79, 0x09, 0x49, 0x33, 0xd5, 0x61, 0xdb,
	0x66, 0x9d, 0x64, 0x57, 0xfa, 0x0a, 0x3e, 0xb5, 0x34, 0x5d, 0xa4, 0x07, 0x6f, 0xf3, 0xcf, 0xff,
	0x25, 0x30, 0x1f, 0xcb, 0xec, 0xb2, 0xf1, 0x20, 0xbd, 0x5b, 0xe9, 0x8d, 0x96, 0x1e, 0xa8, 0x59,
	0xcb, 0x76, 0x2a, 0xc9, 0x7d, 0xfb, 0xa2, 0x26, 0x17, 0x1c, 0x9f, 0x44, 0xa2, 0xd8, 0x13, 0x45,
	0x24, 0x8a, 0x76, 0x7a, 0xfd, 0xd3, 0x63, 0xfd, 0x39, 0xae, 0x56, 0xfc, 0x92, 0xa5, 0x75, 0x63,
	0x2a, 0xd8, 0x8a, 0x24, 0x4b, 0xf2, 0x93, 0xb2, 0x4b, 0xfc, 0x8a, 0x8d, 0x1c, 0x59, 0x20, 0x85,
	0x56, 0xf4, 0xb2, 0x24, 0xef, 0x97, 0xc3, 0x98, 0x9f, 0x2c, 0x9f, 0xb0, 0x14, 0xbd, 0xd2, 0xbe,
	0x12, 0x47, 0x59, 0x92, 0x8f, 0xca, 0x01, 0xfa, 0x99, 0xaf, 0xf8, 0x98, 0x0d, 0xd6, 0xba, 0x02,
	0x12, 0xfd, 0xfd, 0x36, 0x06, 0x7e, 0xc3, 0xce, 0x36, 0x3a, 0x60, 0x0b, 0xea, 0x2b, 0x6c, 0x55,
	0xad, 0xd1, 0x8a, 0x41, 0xfc, 0xee, 0x74, 0xbf, 0x7e, 0x0d, 0xdb, 0x17, 0x8d, 0x96, 0x17, 0xec,
	0xe2, 0x80, 0x23, 0x58, 0x00, 0xb6, 0x60, 0x45, 0x1a, 0xd9, 0xf3, 0x3f, 0xb6, 0xec, 0x0a, 0x2e,
	0xd9, 0xb8, 0xe3, 0x97, 0x00, 0xca, 0x91, 0x22, 0x30, 0x3a, 0x80, 0x18, 0x1e, 0x3e, 0x98, 0x03,
	0x3c, 0x53, 0x19, 0x8b, 0xdd, 0x41, 0x3b, 0x32, 0x20, 0x90, 0x18, 0x65, 0x49, 0x7e, 0x5c, 0x0e,
	0x97, 0x00, 0x6f, 0x08, 0xf4, 0xf0, 0xf8, 0x3e, 0xfb, 0xc0, 0xf0, 0xd9, 0x98, 0x62, 0xe1, 0xd6,
	0x32, 0x0a, 0xbb, 0x45, 0xd7, 0x0d, 0x9d, 0xdb, 0xda, 0xc8, 0x7f, 0x5d, 0xdf, 0xd7, 0x26, 0x8e,
	0x26, 0x8d, 0xbe, 0xef, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x72, 0xd3, 0xb3, 0xd6, 0x93, 0x01,
	0x00, 0x00,
}
