// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dfuse/solana/serumhist/v1/serumhist.proto

package pbserumhist

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Side int32

const (
	Side_BID Side = 0
	Side_ASK Side = 1
)

var Side_name = map[int32]string{
	0: "BID",
	1: "ASK",
}

var Side_value = map[string]int32{
	"BID": 0,
	"ASK": 1,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}

func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{0}
}

type FeeTier int32

const (
	FeeTier_Base FeeTier = 0
	FeeTier_SRM2 FeeTier = 1
	FeeTier_SRM3 FeeTier = 2
	FeeTier_SRM4 FeeTier = 3
	FeeTier_SRM5 FeeTier = 4
	FeeTier_SRM6 FeeTier = 5
	FeeTier_MSRM FeeTier = 6
)

var FeeTier_name = map[int32]string{
	0: "Base",
	1: "SRM2",
	2: "SRM3",
	3: "SRM4",
	4: "SRM5",
	5: "SRM6",
	6: "MSRM",
}

var FeeTier_value = map[string]int32{
	"Base": 0,
	"SRM2": 1,
	"SRM3": 2,
	"SRM4": 3,
	"SRM5": 4,
	"SRM6": 5,
	"MSRM": 6,
}

func (x FeeTier) String() string {
	return proto.EnumName(FeeTier_name, int32(x))
}

func (FeeTier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{1}
}

type GetFillsRequest struct {
	Trader               []byte   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	Market               []byte   `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFillsRequest) Reset()         { *m = GetFillsRequest{} }
func (m *GetFillsRequest) String() string { return proto.CompactTextString(m) }
func (*GetFillsRequest) ProtoMessage()    {}
func (*GetFillsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{0}
}

func (m *GetFillsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFillsRequest.Unmarshal(m, b)
}
func (m *GetFillsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFillsRequest.Marshal(b, m, deterministic)
}
func (m *GetFillsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFillsRequest.Merge(m, src)
}
func (m *GetFillsRequest) XXX_Size() int {
	return xxx_messageInfo_GetFillsRequest.Size(m)
}
func (m *GetFillsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFillsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFillsRequest proto.InternalMessageInfo

func (m *GetFillsRequest) GetTrader() []byte {
	if m != nil {
		return m.Trader
	}
	return nil
}

func (m *GetFillsRequest) GetMarket() []byte {
	if m != nil {
		return m.Market
	}
	return nil
}

type FillsResponse struct {
	Fill                 []*Fill  `protobuf:"bytes,1,rep,name=fill,proto3" json:"fill,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FillsResponse) Reset()         { *m = FillsResponse{} }
func (m *FillsResponse) String() string { return proto.CompactTextString(m) }
func (*FillsResponse) ProtoMessage()    {}
func (*FillsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{1}
}

func (m *FillsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FillsResponse.Unmarshal(m, b)
}
func (m *FillsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FillsResponse.Marshal(b, m, deterministic)
}
func (m *FillsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FillsResponse.Merge(m, src)
}
func (m *FillsResponse) XXX_Size() int {
	return xxx_messageInfo_FillsResponse.Size(m)
}
func (m *FillsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FillsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FillsResponse proto.InternalMessageInfo

func (m *FillsResponse) GetFill() []*Fill {
	if m != nil {
		return m.Fill
	}
	return nil
}

type Checkpoint struct {
	LastWrittenSlotNum   uint64   `protobuf:"varint,1,opt,name=last_written_slot_num,json=lastWrittenSlotNum,proto3" json:"last_written_slot_num,omitempty"`
	LastWrittenLostId    string   `protobuf:"bytes,2,opt,name=last_written_lost_id,json=lastWrittenLostId,proto3" json:"last_written_lost_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{2}
}

func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func (m *Checkpoint) GetLastWrittenSlotNum() uint64 {
	if m != nil {
		return m.LastWrittenSlotNum
	}
	return 0
}

func (m *Checkpoint) GetLastWrittenLostId() string {
	if m != nil {
		return m.LastWrittenLostId
	}
	return ""
}

type Fill struct {
	Trader               []byte   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	OrderId              []byte   `protobuf:"bytes,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Side                 Side     `protobuf:"varint,3,opt,name=side,proto3,enum=dfuse.solana.serumhist.v1.Side" json:"side,omitempty"`
	Maker                bool     `protobuf:"varint,4,opt,name=maker,proto3" json:"maker,omitempty"`
	NativeQtyPaid        uint64   `protobuf:"varint,5,opt,name=native_qty_paid,json=nativeQtyPaid,proto3" json:"native_qty_paid,omitempty"`
	NativeQtyReceived    uint64   `protobuf:"varint,6,opt,name=native_qty_received,json=nativeQtyReceived,proto3" json:"native_qty_received,omitempty"`
	NativeFeeOrRebate    uint64   `protobuf:"varint,7,opt,name=native_fee_or_rebate,json=nativeFeeOrRebate,proto3" json:"native_fee_or_rebate,omitempty"`
	FeeTier              FeeTier  `protobuf:"varint,8,opt,name=fee_tier,json=feeTier,proto3,enum=dfuse.solana.serumhist.v1.FeeTier" json:"fee_tier,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fill) Reset()         { *m = Fill{} }
func (m *Fill) String() string { return proto.CompactTextString(m) }
func (*Fill) ProtoMessage()    {}
func (*Fill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{3}
}

func (m *Fill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fill.Unmarshal(m, b)
}
func (m *Fill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fill.Marshal(b, m, deterministic)
}
func (m *Fill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fill.Merge(m, src)
}
func (m *Fill) XXX_Size() int {
	return xxx_messageInfo_Fill.Size(m)
}
func (m *Fill) XXX_DiscardUnknown() {
	xxx_messageInfo_Fill.DiscardUnknown(m)
}

var xxx_messageInfo_Fill proto.InternalMessageInfo

func (m *Fill) GetTrader() []byte {
	if m != nil {
		return m.Trader
	}
	return nil
}

func (m *Fill) GetOrderId() []byte {
	if m != nil {
		return m.OrderId
	}
	return nil
}

func (m *Fill) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_BID
}

func (m *Fill) GetMaker() bool {
	if m != nil {
		return m.Maker
	}
	return false
}

func (m *Fill) GetNativeQtyPaid() uint64 {
	if m != nil {
		return m.NativeQtyPaid
	}
	return 0
}

func (m *Fill) GetNativeQtyReceived() uint64 {
	if m != nil {
		return m.NativeQtyReceived
	}
	return 0
}

func (m *Fill) GetNativeFeeOrRebate() uint64 {
	if m != nil {
		return m.NativeFeeOrRebate
	}
	return 0
}

func (m *Fill) GetFeeTier() FeeTier {
	if m != nil {
		return m.FeeTier
	}
	return FeeTier_Base
}

func init() {
	proto.RegisterEnum("dfuse.solana.serumhist.v1.Side", Side_name, Side_value)
	proto.RegisterEnum("dfuse.solana.serumhist.v1.FeeTier", FeeTier_name, FeeTier_value)
	proto.RegisterType((*GetFillsRequest)(nil), "dfuse.solana.serumhist.v1.GetFillsRequest")
	proto.RegisterType((*FillsResponse)(nil), "dfuse.solana.serumhist.v1.FillsResponse")
	proto.RegisterType((*Checkpoint)(nil), "dfuse.solana.serumhist.v1.Checkpoint")
	proto.RegisterType((*Fill)(nil), "dfuse.solana.serumhist.v1.Fill")
}

func init() {
	proto.RegisterFile("dfuse/solana/serumhist/v1/serumhist.proto", fileDescriptor_c18832c9aa9279e6)
}

var fileDescriptor_c18832c9aa9279e6 = []byte{
	// 516 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xad, 0x1b, 0x27, 0x31, 0x4b, 0x4a, 0xdd, 0xa5, 0x20, 0x97, 0x0b, 0x51, 0x0e, 0x28, 0x44,
	0xc2, 0x56, 0x12, 0xe0, 0x82, 0x38, 0x34, 0x54, 0x85, 0xa8, 0x84, 0xc2, 0x1a, 0x09, 0x89, 0x8b,
	0x71, 0xe2, 0x09, 0x59, 0xc5, 0xf6, 0xba, 0xbb, 0xeb, 0xa0, 0xfc, 0x23, 0x1f, 0x85, 0x76, 0xbd,
	0x4d, 0x03, 0x52, 0xc2, 0xed, 0xbd, 0x99, 0xf7, 0xec, 0x79, 0xf6, 0x0c, 0x7a, 0x9e, 0xcc, 0x4b,
	0x01, 0x81, 0x60, 0x69, 0x9c, 0xc7, 0x81, 0x00, 0x5e, 0x66, 0x0b, 0x2a, 0x64, 0xb0, 0xea, 0xdf,
	0x11, 0xbf, 0xe0, 0x4c, 0x32, 0x7c, 0xa6, 0xa5, 0x7e, 0x25, 0xf5, 0xef, 0xba, 0xab, 0x7e, 0xe7,
	0x1c, 0x1d, 0xbf, 0x07, 0x79, 0x49, 0xd3, 0x54, 0x10, 0xb8, 0x29, 0x41, 0x48, 0xfc, 0x18, 0x35,
	0x24, 0x8f, 0x13, 0xe0, 0x9e, 0xd5, 0xb6, 0xba, 0x2d, 0x62, 0x98, 0xaa, 0x67, 0x31, 0x5f, 0x82,
	0xf4, 0x0e, 0xab, 0x7a, 0xc5, 0x3a, 0x17, 0xe8, 0xc8, 0xf8, 0x45, 0xc1, 0x72, 0x01, 0x78, 0x88,
	0xec, 0x39, 0x4d, 0x53, 0xcf, 0x6a, 0xd7, 0xba, 0xf7, 0x07, 0x4f, 0xfd, 0x9d, 0x6f, 0xf7, 0x95,
	0x8f, 0x68, 0x71, 0xa7, 0x40, 0xe8, 0xdd, 0x02, 0x66, 0xcb, 0x82, 0xd1, 0x5c, 0xe2, 0x3e, 0x7a,
	0x94, 0xc6, 0x42, 0x46, 0xbf, 0x38, 0x95, 0x12, 0xf2, 0x48, 0xa4, 0x4c, 0x46, 0x79, 0x99, 0xe9,
	0x91, 0x6c, 0x82, 0x55, 0xf3, 0x5b, 0xd5, 0x0b, 0x53, 0x26, 0x3f, 0x95, 0x19, 0x0e, 0xd0, 0xe9,
	0x5f, 0x96, 0x94, 0x09, 0x19, 0xd1, 0x44, 0x0f, 0x7b, 0x8f, 0x9c, 0x6c, 0x39, 0x3e, 0x32, 0x21,
	0xc7, 0x49, 0xe7, 0xf7, 0x21, 0xb2, 0xd5, 0x00, 0x3b, 0x03, 0x9f, 0x21, 0x87, 0xf1, 0x04, 0xf8,
	0xed, 0x53, 0x5a, 0xa4, 0xa9, 0xf9, 0x38, 0x51, 0x11, 0x05, 0x4d, 0xc0, 0xab, 0xb5, 0xad, 0xee,
	0x83, 0xbd, 0x11, 0x43, 0x9a, 0x00, 0xd1, 0x62, 0x7c, 0x8a, 0xea, 0x59, 0xbc, 0x04, 0xee, 0xd9,
	0x6d, 0xab, 0xeb, 0x90, 0x8a, 0xe0, 0x67, 0xe8, 0x38, 0x8f, 0x25, 0x5d, 0x41, 0x74, 0x23, 0xd7,
	0x51, 0x11, 0xd3, 0xc4, 0xab, 0xeb, 0x90, 0x47, 0x55, 0xf9, 0x8b, 0x5c, 0x7f, 0x8e, 0x69, 0x82,
	0x7d, 0xf4, 0x70, 0x4b, 0xc7, 0x61, 0x06, 0x74, 0x05, 0x89, 0xd7, 0xd0, 0xda, 0x93, 0x8d, 0x96,
	0x98, 0x86, 0xfa, 0x1e, 0x46, 0x3f, 0x07, 0x88, 0x18, 0x8f, 0x38, 0x4c, 0x63, 0x09, 0x5e, 0x73,
	0xdb, 0x70, 0x09, 0x70, 0xcd, 0x89, 0x6e, 0xe0, 0xb7, 0xc8, 0x51, 0x4a, 0x49, 0x81, 0x7b, 0x8e,
	0xce, 0xd5, 0xd9, 0xf7, 0xeb, 0x00, 0xbe, 0x52, 0xe0, 0xa4, 0x39, 0xaf, 0x40, 0xcf, 0x43, 0xb6,
	0xca, 0x8a, 0x9b, 0xa8, 0x36, 0x1a, 0x5f, 0xb8, 0x07, 0x0a, 0x9c, 0x87, 0x57, 0xae, 0xd5, 0xbb,
	0x46, 0x4d, 0xa3, 0xc6, 0x0e, 0xb2, 0x47, 0xb1, 0x00, 0xf7, 0x40, 0xa1, 0x90, 0x4c, 0x06, 0xae,
	0x65, 0xd0, 0xd0, 0x3d, 0x34, 0xe8, 0xa5, 0x5b, 0x33, 0xe8, 0x95, 0x6b, 0x1b, 0xf4, 0xda, 0xad,
	0x2b, 0x34, 0x09, 0xc9, 0xc4, 0x6d, 0x0c, 0x0a, 0xd4, 0x0a, 0xd5, 0x2c, 0x1f, 0xa8, 0x90, 0x8c,
	0xaf, 0xf1, 0x0f, 0xe4, 0xdc, 0x2e, 0x31, 0xee, 0xed, 0x99, 0xf9, 0x9f, 0x4d, 0x7f, 0xd2, 0xfd,
	0xcf, 0x6a, 0x6e, 0x56, 0x7a, 0x74, 0xf5, 0x7d, 0xfc, 0x93, 0xca, 0x45, 0x39, 0xf5, 0x67, 0x2c,
	0x0b, 0xb4, 0xeb, 0x05, 0x65, 0x06, 0x98, 0x13, 0x2c, 0xa6, 0xc1, 0xce, 0x93, 0x7c, 0x53, 0x4c,
	0x37, 0x74, 0xda, 0xd0, 0x57, 0x39, 0xfc, 0x13, 0x00, 0x00, 0xff, 0xff, 0xef, 0xa1, 0x68, 0xd3,
	0xc2, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SerumHistoryClient is the client API for SerumHistory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SerumHistoryClient interface {
	GetFills(ctx context.Context, in *GetFillsRequest, opts ...grpc.CallOption) (*FillsResponse, error)
}

type serumHistoryClient struct {
	cc *grpc.ClientConn
}

func NewSerumHistoryClient(cc *grpc.ClientConn) SerumHistoryClient {
	return &serumHistoryClient{cc}
}

func (c *serumHistoryClient) GetFills(ctx context.Context, in *GetFillsRequest, opts ...grpc.CallOption) (*FillsResponse, error) {
	out := new(FillsResponse)
	err := c.cc.Invoke(ctx, "/dfuse.solana.serumhist.v1.SerumHistory/GetFills", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SerumHistoryServer is the server API for SerumHistory service.
type SerumHistoryServer interface {
	GetFills(context.Context, *GetFillsRequest) (*FillsResponse, error)
}

// UnimplementedSerumHistoryServer can be embedded to have forward compatible implementations.
type UnimplementedSerumHistoryServer struct {
}

func (*UnimplementedSerumHistoryServer) GetFills(ctx context.Context, req *GetFillsRequest) (*FillsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFills not implemented")
}

func RegisterSerumHistoryServer(s *grpc.Server, srv SerumHistoryServer) {
	s.RegisterService(&_SerumHistory_serviceDesc, srv)
}

func _SerumHistory_GetFills_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFillsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SerumHistoryServer).GetFills(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfuse.solana.serumhist.v1.SerumHistory/GetFills",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SerumHistoryServer).GetFills(ctx, req.(*GetFillsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SerumHistory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dfuse.solana.serumhist.v1.SerumHistory",
	HandlerType: (*SerumHistoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFills",
			Handler:    _SerumHistory_GetFills_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dfuse/solana/serumhist/v1/serumhist.proto",
}
