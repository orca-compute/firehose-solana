// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dfuse/solana/serumhist/v1/serumhist.proto

package pbserumhist

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Side int32

const (
	Side_BID Side = 0
	Side_ASK Side = 1
)

var Side_name = map[int32]string{
	0: "BID",
	1: "ASK",
}

var Side_value = map[string]int32{
	"BID": 0,
	"ASK": 1,
}

func (x Side) String() string {
	return proto.EnumName(Side_name, int32(x))
}

func (Side) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{0}
}

type FeeTier int32

const (
	FeeTier_Base FeeTier = 0
	FeeTier_SRM2 FeeTier = 1
	FeeTier_SRM3 FeeTier = 2
	FeeTier_SRM4 FeeTier = 3
	FeeTier_SRM5 FeeTier = 4
	FeeTier_SRM6 FeeTier = 5
	FeeTier_MSRM FeeTier = 6
)

var FeeTier_name = map[int32]string{
	0: "Base",
	1: "SRM2",
	2: "SRM3",
	3: "SRM4",
	4: "SRM5",
	5: "SRM6",
	6: "MSRM",
}

var FeeTier_value = map[string]int32{
	"Base": 0,
	"SRM2": 1,
	"SRM3": 2,
	"SRM4": 3,
	"SRM5": 4,
	"SRM6": 5,
	"MSRM": 6,
}

func (x FeeTier) String() string {
	return proto.EnumName(FeeTier_name, int32(x))
}

func (FeeTier) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{1}
}

type OrderType int32

const (
	OrderType_LIMIT               OrderType = 0
	OrderType_IMMEDIATE_OR_CANCEL OrderType = 1
	OrderType_POST_ONLY           OrderType = 2
)

var OrderType_name = map[int32]string{
	0: "LIMIT",
	1: "IMMEDIATE_OR_CANCEL",
	2: "POST_ONLY",
}

var OrderType_value = map[string]int32{
	"LIMIT":               0,
	"IMMEDIATE_OR_CANCEL": 1,
	"POST_ONLY":           2,
}

func (x OrderType) String() string {
	return proto.EnumName(OrderType_name, int32(x))
}

func (OrderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{2}
}

type OrderState_State int32

const (
	OrderState_STATE_UNKNOWN        OrderState_State = 0
	OrderState_STATE_APPROVED       OrderState_State = 1
	OrderState_STATE_CANCEL_PENDING OrderState_State = 2
	OrderState_STATE_CANCELLED      OrderState_State = 3
	OrderState_STATE_PARTIAL        OrderState_State = 4
	OrderState_STATE_EXECUTED       OrderState_State = 5
)

var OrderState_State_name = map[int32]string{
	0: "STATE_UNKNOWN",
	1: "STATE_APPROVED",
	2: "STATE_CANCEL_PENDING",
	3: "STATE_CANCELLED",
	4: "STATE_PARTIAL",
	5: "STATE_EXECUTED",
}

var OrderState_State_value = map[string]int32{
	"STATE_UNKNOWN":        0,
	"STATE_APPROVED":       1,
	"STATE_CANCEL_PENDING": 2,
	"STATE_CANCELLED":      3,
	"STATE_PARTIAL":        4,
	"STATE_EXECUTED":       5,
}

func (x OrderState_State) String() string {
	return proto.EnumName(OrderState_State_name, int32(x))
}

func (OrderState_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{3, 0}
}

type OrderState_Transition int32

const (
	OrderState_TRANS_ACCEPTED             OrderState_Transition = 0
	OrderState_TRANS_PENDING_CANCELLATION OrderState_Transition = 1
	OrderState_TRANS_CANCELLED            OrderState_Transition = 2
	OrderState_TRANS_FILLED               OrderState_Transition = 3
	OrderState_TRANS_EXECUTED             OrderState_Transition = 4
)

var OrderState_Transition_name = map[int32]string{
	0: "TRANS_ACCEPTED",
	1: "TRANS_PENDING_CANCELLATION",
	2: "TRANS_CANCELLED",
	3: "TRANS_FILLED",
	4: "TRANS_EXECUTED",
}

var OrderState_Transition_value = map[string]int32{
	"TRANS_ACCEPTED":             0,
	"TRANS_PENDING_CANCELLATION": 1,
	"TRANS_CANCELLED":            2,
	"TRANS_FILLED":               3,
	"TRANS_EXECUTED":             4,
}

func (x OrderState_Transition) String() string {
	return proto.EnumName(OrderState_Transition_name, int32(x))
}

func (OrderState_Transition) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{3, 1}
}

type GetFillsRequest struct {
	Trader               string   `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	Market               string   `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFillsRequest) Reset()         { *m = GetFillsRequest{} }
func (m *GetFillsRequest) String() string { return proto.CompactTextString(m) }
func (*GetFillsRequest) ProtoMessage()    {}
func (*GetFillsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{0}
}

func (m *GetFillsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFillsRequest.Unmarshal(m, b)
}
func (m *GetFillsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFillsRequest.Marshal(b, m, deterministic)
}
func (m *GetFillsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFillsRequest.Merge(m, src)
}
func (m *GetFillsRequest) XXX_Size() int {
	return xxx_messageInfo_GetFillsRequest.Size(m)
}
func (m *GetFillsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFillsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFillsRequest proto.InternalMessageInfo

func (m *GetFillsRequest) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *GetFillsRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

type FillsResponse struct {
	Fill                 []*Fill  `protobuf:"bytes,1,rep,name=fill,proto3" json:"fill,omitempty"`
	HasMore              bool     `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FillsResponse) Reset()         { *m = FillsResponse{} }
func (m *FillsResponse) String() string { return proto.CompactTextString(m) }
func (*FillsResponse) ProtoMessage()    {}
func (*FillsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{1}
}

func (m *FillsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FillsResponse.Unmarshal(m, b)
}
func (m *FillsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FillsResponse.Marshal(b, m, deterministic)
}
func (m *FillsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FillsResponse.Merge(m, src)
}
func (m *FillsResponse) XXX_Size() int {
	return xxx_messageInfo_FillsResponse.Size(m)
}
func (m *FillsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FillsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FillsResponse proto.InternalMessageInfo

func (m *FillsResponse) GetFill() []*Fill {
	if m != nil {
		return m.Fill
	}
	return nil
}

func (m *FillsResponse) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

type TrackOrderRequest struct {
	Market               string   `protobuf:"bytes,1,opt,name=market,proto3" json:"market,omitempty"`
	OrderId              uint64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackOrderRequest) Reset()         { *m = TrackOrderRequest{} }
func (m *TrackOrderRequest) String() string { return proto.CompactTextString(m) }
func (*TrackOrderRequest) ProtoMessage()    {}
func (*TrackOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{2}
}

func (m *TrackOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackOrderRequest.Unmarshal(m, b)
}
func (m *TrackOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackOrderRequest.Marshal(b, m, deterministic)
}
func (m *TrackOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackOrderRequest.Merge(m, src)
}
func (m *TrackOrderRequest) XXX_Size() int {
	return xxx_messageInfo_TrackOrderRequest.Size(m)
}
func (m *TrackOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TrackOrderRequest proto.InternalMessageInfo

func (m *TrackOrderRequest) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *TrackOrderRequest) GetOrderId() uint64 {
	if m != nil {
		return m.OrderId
	}
	return 0
}

type OrderState struct {
	PreviousState        OrderState_State      `protobuf:"varint,1,opt,name=previous_state,json=previousState,proto3,enum=dfuse.solana.serumhist.v1.OrderState_State" json:"previous_state,omitempty"`
	CurrentState         OrderState_State      `protobuf:"varint,2,opt,name=current_state,json=currentState,proto3,enum=dfuse.solana.serumhist.v1.OrderState_State" json:"current_state,omitempty"`
	Transition           OrderState_Transition `protobuf:"varint,3,opt,name=transition,proto3,enum=dfuse.solana.serumhist.v1.OrderState_Transition" json:"transition,omitempty"`
	Order                *Order                `protobuf:"bytes,4,opt,name=order,proto3" json:"order,omitempty"`
	Fill                 *Fill                 `protobuf:"bytes,5,opt,name=fill,proto3" json:"fill,omitempty"`
	InstInfo             *InstructionInfo      `protobuf:"bytes,6,opt,name=inst_info,json=instInfo,proto3" json:"inst_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *OrderState) Reset()         { *m = OrderState{} }
func (m *OrderState) String() string { return proto.CompactTextString(m) }
func (*OrderState) ProtoMessage()    {}
func (*OrderState) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{3}
}

func (m *OrderState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderState.Unmarshal(m, b)
}
func (m *OrderState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderState.Marshal(b, m, deterministic)
}
func (m *OrderState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderState.Merge(m, src)
}
func (m *OrderState) XXX_Size() int {
	return xxx_messageInfo_OrderState.Size(m)
}
func (m *OrderState) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderState.DiscardUnknown(m)
}

var xxx_messageInfo_OrderState proto.InternalMessageInfo

func (m *OrderState) GetPreviousState() OrderState_State {
	if m != nil {
		return m.PreviousState
	}
	return OrderState_STATE_UNKNOWN
}

func (m *OrderState) GetCurrentState() OrderState_State {
	if m != nil {
		return m.CurrentState
	}
	return OrderState_STATE_UNKNOWN
}

func (m *OrderState) GetTransition() OrderState_Transition {
	if m != nil {
		return m.Transition
	}
	return OrderState_TRANS_ACCEPTED
}

func (m *OrderState) GetOrder() *Order {
	if m != nil {
		return m.Order
	}
	return nil
}

func (m *OrderState) GetFill() *Fill {
	if m != nil {
		return m.Fill
	}
	return nil
}

func (m *OrderState) GetInstInfo() *InstructionInfo {
	if m != nil {
		return m.InstInfo
	}
	return nil
}

type InstructionInfo struct {
	SlotNum              uint64               `protobuf:"varint,1,opt,name=slot_num,json=slotNum,proto3" json:"slot_num,omitempty"`
	TrxHash              string               `protobuf:"bytes,2,opt,name=trx_hash,json=trxHash,proto3" json:"trx_hash,omitempty"`
	TrxIdx               uint64               `protobuf:"varint,3,opt,name=trx_idx,json=trxIdx,proto3" json:"trx_idx,omitempty"`
	InstIdx              uint64               `protobuf:"varint,4,opt,name=inst_idx,json=instIdx,proto3" json:"inst_idx,omitempty"`
	SlotHash             string               `protobuf:"bytes,5,opt,name=slot_hash,json=slotHash,proto3" json:"slot_hash,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *InstructionInfo) Reset()         { *m = InstructionInfo{} }
func (m *InstructionInfo) String() string { return proto.CompactTextString(m) }
func (*InstructionInfo) ProtoMessage()    {}
func (*InstructionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{4}
}

func (m *InstructionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InstructionInfo.Unmarshal(m, b)
}
func (m *InstructionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InstructionInfo.Marshal(b, m, deterministic)
}
func (m *InstructionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InstructionInfo.Merge(m, src)
}
func (m *InstructionInfo) XXX_Size() int {
	return xxx_messageInfo_InstructionInfo.Size(m)
}
func (m *InstructionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_InstructionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_InstructionInfo proto.InternalMessageInfo

func (m *InstructionInfo) GetSlotNum() uint64 {
	if m != nil {
		return m.SlotNum
	}
	return 0
}

func (m *InstructionInfo) GetTrxHash() string {
	if m != nil {
		return m.TrxHash
	}
	return ""
}

func (m *InstructionInfo) GetTrxIdx() uint64 {
	if m != nil {
		return m.TrxIdx
	}
	return 0
}

func (m *InstructionInfo) GetInstIdx() uint64 {
	if m != nil {
		return m.InstIdx
	}
	return 0
}

func (m *InstructionInfo) GetSlotHash() string {
	if m != nil {
		return m.SlotHash
	}
	return ""
}

func (m *InstructionInfo) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Checkpoint struct {
	LastWrittenSlotNum   uint64   `protobuf:"varint,1,opt,name=last_written_slot_num,json=lastWrittenSlotNum,proto3" json:"last_written_slot_num,omitempty"`
	LastWrittenSlotId    string   `protobuf:"bytes,2,opt,name=last_written_slot_id,json=lastWrittenSlotId,proto3" json:"last_written_slot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Checkpoint) Reset()         { *m = Checkpoint{} }
func (m *Checkpoint) String() string { return proto.CompactTextString(m) }
func (*Checkpoint) ProtoMessage()    {}
func (*Checkpoint) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{5}
}

func (m *Checkpoint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Checkpoint.Unmarshal(m, b)
}
func (m *Checkpoint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Checkpoint.Marshal(b, m, deterministic)
}
func (m *Checkpoint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Checkpoint.Merge(m, src)
}
func (m *Checkpoint) XXX_Size() int {
	return xxx_messageInfo_Checkpoint.Size(m)
}
func (m *Checkpoint) XXX_DiscardUnknown() {
	xxx_messageInfo_Checkpoint.DiscardUnknown(m)
}

var xxx_messageInfo_Checkpoint proto.InternalMessageInfo

func (m *Checkpoint) GetLastWrittenSlotNum() uint64 {
	if m != nil {
		return m.LastWrittenSlotNum
	}
	return 0
}

func (m *Checkpoint) GetLastWrittenSlotId() string {
	if m != nil {
		return m.LastWrittenSlotId
	}
	return ""
}

type Fill struct {
	Trader               string               `protobuf:"bytes,1,opt,name=trader,proto3" json:"trader,omitempty"`
	Market               string               `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	OrderId              string               `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Side                 Side                 `protobuf:"varint,4,opt,name=side,proto3,enum=dfuse.solana.serumhist.v1.Side" json:"side,omitempty"`
	Maker                bool                 `protobuf:"varint,5,opt,name=maker,proto3" json:"maker,omitempty"`
	NativeQtyPaid        uint64               `protobuf:"varint,6,opt,name=native_qty_paid,json=nativeQtyPaid,proto3" json:"native_qty_paid,omitempty"`
	NativeQtyReceived    uint64               `protobuf:"varint,7,opt,name=native_qty_received,json=nativeQtyReceived,proto3" json:"native_qty_received,omitempty"`
	NativeFeeOrRebate    uint64               `protobuf:"varint,8,opt,name=native_fee_or_rebate,json=nativeFeeOrRebate,proto3" json:"native_fee_or_rebate,omitempty"`
	FeeTier              FeeTier              `protobuf:"varint,9,opt,name=fee_tier,json=feeTier,proto3,enum=dfuse.solana.serumhist.v1.FeeTier" json:"fee_tier,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	SlotNum              uint64               `protobuf:"varint,20,opt,name=slot_num,json=slotNum,proto3" json:"slot_num,omitempty"`
	SlotHash             string               `protobuf:"bytes,24,opt,name=slot_hash,json=slotHash,proto3" json:"slot_hash,omitempty"`
	TrxId                string               `protobuf:"bytes,25,opt,name=trx_id,json=trxId,proto3" json:"trx_id,omitempty"`
	TrxIdx               uint32               `protobuf:"varint,21,opt,name=trx_idx,json=trxIdx,proto3" json:"trx_idx,omitempty"`
	InstIdx              uint32               `protobuf:"varint,22,opt,name=inst_idx,json=instIdx,proto3" json:"inst_idx,omitempty"`
	OrderSeqNum          uint64               `protobuf:"varint,23,opt,name=order_seq_num,json=orderSeqNum,proto3" json:"order_seq_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Fill) Reset()         { *m = Fill{} }
func (m *Fill) String() string { return proto.CompactTextString(m) }
func (*Fill) ProtoMessage()    {}
func (*Fill) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{6}
}

func (m *Fill) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fill.Unmarshal(m, b)
}
func (m *Fill) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fill.Marshal(b, m, deterministic)
}
func (m *Fill) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fill.Merge(m, src)
}
func (m *Fill) XXX_Size() int {
	return xxx_messageInfo_Fill.Size(m)
}
func (m *Fill) XXX_DiscardUnknown() {
	xxx_messageInfo_Fill.DiscardUnknown(m)
}

var xxx_messageInfo_Fill proto.InternalMessageInfo

func (m *Fill) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *Fill) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Fill) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Fill) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_BID
}

func (m *Fill) GetMaker() bool {
	if m != nil {
		return m.Maker
	}
	return false
}

func (m *Fill) GetNativeQtyPaid() uint64 {
	if m != nil {
		return m.NativeQtyPaid
	}
	return 0
}

func (m *Fill) GetNativeQtyReceived() uint64 {
	if m != nil {
		return m.NativeQtyReceived
	}
	return 0
}

func (m *Fill) GetNativeFeeOrRebate() uint64 {
	if m != nil {
		return m.NativeFeeOrRebate
	}
	return 0
}

func (m *Fill) GetFeeTier() FeeTier {
	if m != nil {
		return m.FeeTier
	}
	return FeeTier_Base
}

func (m *Fill) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Fill) GetSlotNum() uint64 {
	if m != nil {
		return m.SlotNum
	}
	return 0
}

func (m *Fill) GetSlotHash() string {
	if m != nil {
		return m.SlotHash
	}
	return ""
}

func (m *Fill) GetTrxId() string {
	if m != nil {
		return m.TrxId
	}
	return ""
}

func (m *Fill) GetTrxIdx() uint32 {
	if m != nil {
		return m.TrxIdx
	}
	return 0
}

func (m *Fill) GetInstIdx() uint32 {
	if m != nil {
		return m.InstIdx
	}
	return 0
}

func (m *Fill) GetOrderSeqNum() uint64 {
	if m != nil {
		return m.OrderSeqNum
	}
	return 0
}

type Order struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Market               string    `protobuf:"bytes,2,opt,name=market,proto3" json:"market,omitempty"`
	Trader               string    `protobuf:"bytes,3,opt,name=trader,proto3" json:"trader,omitempty"`
	Side                 Side      `protobuf:"varint,4,opt,name=side,proto3,enum=dfuse.solana.serumhist.v1.Side" json:"side,omitempty"`
	LimitPrice           uint64    `protobuf:"varint,5,opt,name=limit_price,json=limitPrice,proto3" json:"limit_price,omitempty"`
	MaxQuantity          uint64    `protobuf:"varint,6,opt,name=max_quantity,json=maxQuantity,proto3" json:"max_quantity,omitempty"`
	Type                 OrderType `protobuf:"varint,7,opt,name=type,proto3,enum=dfuse.solana.serumhist.v1.OrderType" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_c18832c9aa9279e6, []int{7}
}

func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (m *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(m, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Order) GetMarket() string {
	if m != nil {
		return m.Market
	}
	return ""
}

func (m *Order) GetTrader() string {
	if m != nil {
		return m.Trader
	}
	return ""
}

func (m *Order) GetSide() Side {
	if m != nil {
		return m.Side
	}
	return Side_BID
}

func (m *Order) GetLimitPrice() uint64 {
	if m != nil {
		return m.LimitPrice
	}
	return 0
}

func (m *Order) GetMaxQuantity() uint64 {
	if m != nil {
		return m.MaxQuantity
	}
	return 0
}

func (m *Order) GetType() OrderType {
	if m != nil {
		return m.Type
	}
	return OrderType_LIMIT
}

func init() {
	proto.RegisterEnum("dfuse.solana.serumhist.v1.Side", Side_name, Side_value)
	proto.RegisterEnum("dfuse.solana.serumhist.v1.FeeTier", FeeTier_name, FeeTier_value)
	proto.RegisterEnum("dfuse.solana.serumhist.v1.OrderType", OrderType_name, OrderType_value)
	proto.RegisterEnum("dfuse.solana.serumhist.v1.OrderState_State", OrderState_State_name, OrderState_State_value)
	proto.RegisterEnum("dfuse.solana.serumhist.v1.OrderState_Transition", OrderState_Transition_name, OrderState_Transition_value)
	proto.RegisterType((*GetFillsRequest)(nil), "dfuse.solana.serumhist.v1.GetFillsRequest")
	proto.RegisterType((*FillsResponse)(nil), "dfuse.solana.serumhist.v1.FillsResponse")
	proto.RegisterType((*TrackOrderRequest)(nil), "dfuse.solana.serumhist.v1.TrackOrderRequest")
	proto.RegisterType((*OrderState)(nil), "dfuse.solana.serumhist.v1.OrderState")
	proto.RegisterType((*InstructionInfo)(nil), "dfuse.solana.serumhist.v1.InstructionInfo")
	proto.RegisterType((*Checkpoint)(nil), "dfuse.solana.serumhist.v1.Checkpoint")
	proto.RegisterType((*Fill)(nil), "dfuse.solana.serumhist.v1.Fill")
	proto.RegisterType((*Order)(nil), "dfuse.solana.serumhist.v1.Order")
}

func init() {
	proto.RegisterFile("dfuse/solana/serumhist/v1/serumhist.proto", fileDescriptor_c18832c9aa9279e6)
}

var fileDescriptor_c18832c9aa9279e6 = []byte{
	// 1173 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5b, 0x6f, 0xdb, 0xb6,
	0x17, 0x8f, 0x6c, 0x39, 0xb6, 0x4f, 0xe2, 0x44, 0x61, 0xd3, 0x56, 0xcd, 0x1f, 0xf8, 0x37, 0x13,
	0xb6, 0x21, 0xcb, 0x36, 0xbb, 0x4d, 0xb7, 0xa2, 0xc0, 0xb0, 0x01, 0x6e, 0xe2, 0xb4, 0x42, 0xe3,
	0x4b, 0x69, 0x75, 0xdd, 0xf6, 0xa2, 0x29, 0x16, 0x5d, 0x13, 0xb1, 0x2e, 0x21, 0xa9, 0xcc, 0xc1,
	0x5e, 0xf7, 0xb9, 0xf6, 0xb6, 0x2f, 0x30, 0x60, 0x5f, 0x66, 0x4f, 0x03, 0x29, 0xc6, 0x97, 0x74,
	0x75, 0x9b, 0xbd, 0x08, 0x87, 0xe7, 0xf2, 0x3b, 0x47, 0x87, 0x3f, 0x1e, 0x12, 0x3e, 0x0b, 0x87,
	0x19, 0x27, 0x0d, 0x9e, 0x8c, 0x83, 0x38, 0x68, 0x70, 0xc2, 0xb2, 0x68, 0x44, 0xb9, 0x68, 0x5c,
	0x3c, 0x9c, 0x2d, 0xea, 0x29, 0x4b, 0x44, 0x82, 0xee, 0x29, 0xd7, 0x7a, 0xee, 0x5a, 0x9f, 0x59,
	0x2f, 0x1e, 0xee, 0xdc, 0x7f, 0x93, 0x24, 0x6f, 0xc6, 0xa4, 0xa1, 0x1c, 0x4f, 0xb3, 0x61, 0x43,
	0xd0, 0x88, 0x70, 0x11, 0x44, 0x69, 0x1e, 0xeb, 0x34, 0x61, 0xf3, 0x19, 0x11, 0xc7, 0x74, 0x3c,
	0xe6, 0x98, 0x9c, 0x67, 0x84, 0x0b, 0x74, 0x07, 0x56, 0x05, 0x0b, 0x42, 0xc2, 0x6c, 0x63, 0xd7,
	0xd8, 0xab, 0x62, 0xbd, 0x92, 0xfa, 0x28, 0x60, 0x67, 0x44, 0xd8, 0x85, 0x5c, 0x9f, 0xaf, 0x1c,
	0x1f, 0x6a, 0x3a, 0x9e, 0xa7, 0x49, 0xcc, 0x09, 0x7a, 0x04, 0xe6, 0x90, 0x8e, 0xc7, 0xb6, 0xb1,
	0x5b, 0xdc, 0x5b, 0x3b, 0xb8, 0x5f, 0x7f, 0x67, 0x79, 0x75, 0x19, 0x87, 0x95, 0x33, 0xba, 0x07,
	0x95, 0x51, 0xc0, 0xfd, 0x28, 0x61, 0x44, 0xe1, 0x57, 0x70, 0x79, 0x14, 0xf0, 0x76, 0xc2, 0x88,
	0x73, 0x0c, 0x5b, 0x1e, 0x0b, 0x06, 0x67, 0x5d, 0x16, 0x12, 0x36, 0x57, 0xa5, 0xae, 0xc6, 0x98,
	0xaf, 0x46, 0xe2, 0x24, 0xd2, 0xcf, 0xa7, 0xa1, 0xc2, 0x31, 0x71, 0x59, 0xad, 0xdd, 0xd0, 0xf9,
	0xbd, 0x04, 0xa0, 0x30, 0xfa, 0x22, 0x10, 0x04, 0x61, 0xd8, 0x48, 0x19, 0xb9, 0xa0, 0x49, 0xc6,
	0x7d, 0x2e, 0x35, 0x0a, 0x69, 0xe3, 0xe0, 0xf3, 0x25, 0x05, 0xcf, 0xc2, 0xeb, 0xea, 0x8b, 0x6b,
	0x57, 0x10, 0x39, 0x66, 0x0f, 0x6a, 0x83, 0x8c, 0x31, 0x12, 0x0b, 0x0d, 0x59, 0xb8, 0x39, 0xe4,
	0xba, 0x46, 0xb8, 0x42, 0x04, 0xc1, 0x82, 0x98, 0x53, 0x41, 0x93, 0xd8, 0x2e, 0x2a, 0xb8, 0x07,
	0x1f, 0x06, 0xe7, 0x4d, 0xe3, 0xf0, 0x1c, 0x06, 0x7a, 0x0c, 0x25, 0xd5, 0x11, 0xdb, 0xdc, 0x35,
	0xf6, 0xd6, 0x0e, 0x76, 0xdf, 0x07, 0x86, 0x73, 0xf7, 0xe9, 0xb6, 0x96, 0x54, 0xd8, 0x07, 0x6e,
	0xeb, 0x33, 0xa8, 0xd2, 0x98, 0x0b, 0x9f, 0xc6, 0xc3, 0xc4, 0x5e, 0x55, 0x91, 0xfb, 0x4b, 0x22,
	0xdd, 0x98, 0x0b, 0x96, 0x0d, 0x64, 0x9d, 0x6e, 0x3c, 0x4c, 0x70, 0x45, 0x06, 0x4b, 0xc9, 0xf9,
	0xcd, 0x80, 0x52, 0xde, 0x91, 0x2d, 0xa8, 0xf5, 0xbd, 0xa6, 0xd7, 0xf2, 0x5f, 0x75, 0x5e, 0x74,
	0xba, 0xaf, 0x3b, 0xd6, 0x0a, 0x42, 0xb0, 0x91, 0xab, 0x9a, 0xbd, 0x1e, 0xee, 0x7e, 0xdf, 0x3a,
	0xb2, 0x0c, 0x64, 0xc3, 0x76, 0xae, 0x3b, 0x6c, 0x76, 0x0e, 0x5b, 0x27, 0x7e, 0xaf, 0xd5, 0x39,
	0x72, 0x3b, 0xcf, 0xac, 0x02, 0xba, 0x05, 0x9b, 0xf3, 0x96, 0x93, 0xd6, 0x91, 0x55, 0x9c, 0xa1,
	0xf6, 0x9a, 0xd8, 0x73, 0x9b, 0x27, 0x96, 0x39, 0x43, 0x6d, 0xfd, 0xd0, 0x3a, 0x7c, 0xe5, 0xb5,
	0x8e, 0xac, 0x92, 0xf3, 0x2b, 0xc0, 0xac, 0xad, 0xd2, 0xc3, 0xc3, 0xcd, 0x4e, 0xdf, 0x6f, 0x1e,
	0x1e, 0xb6, 0x7a, 0xd2, 0x63, 0x05, 0xfd, 0x1f, 0x76, 0x72, 0x9d, 0x4e, 0x78, 0x95, 0xa5, 0xe9,
	0xb9, 0xdd, 0x8e, 0x65, 0xc8, 0xec, 0xb9, 0x7d, 0x96, 0xbd, 0x80, 0x2c, 0x58, 0xcf, 0x95, 0xc7,
	0xae, 0xae, 0x67, 0x0a, 0x3d, 0x4d, 0x6e, 0x3a, 0x7f, 0x1a, 0xb0, 0x79, 0xad, 0x43, 0x92, 0xef,
	0x7c, 0x9c, 0x08, 0x3f, 0xce, 0x22, 0xc5, 0x5f, 0x13, 0x97, 0xe5, 0xba, 0x93, 0x45, 0xd2, 0x24,
	0xd8, 0xc4, 0x1f, 0x05, 0x7c, 0xa4, 0x8f, 0x6c, 0x59, 0xb0, 0xc9, 0xf3, 0x80, 0x8f, 0xd0, 0x5d,
	0x90, 0xa2, 0x4f, 0xc3, 0x89, 0xa2, 0x94, 0x29, 0x0f, 0xf9, 0xc4, 0x0d, 0x27, 0x32, 0x26, 0xdf,
	0xaf, 0x70, 0xa2, 0xf8, 0x61, 0xe2, 0xb2, 0xda, 0x82, 0x70, 0x82, 0xfe, 0x07, 0x55, 0x95, 0x49,
	0xe1, 0x95, 0x14, 0x9e, 0x4a, 0xad, 0x00, 0x9f, 0x40, 0x75, 0x3a, 0x5a, 0xf4, 0x3e, 0xef, 0xd4,
	0xf3, 0xe1, 0x53, 0xbf, 0x1a, 0x3e, 0x75, 0xef, 0xca, 0x03, 0xcf, 0x9c, 0x9d, 0x14, 0xe0, 0x70,
	0x44, 0x06, 0x67, 0x69, 0x42, 0x63, 0x81, 0x1e, 0xc2, 0xed, 0x71, 0xc0, 0x85, 0xff, 0x0b, 0xa3,
	0x42, 0x90, 0xd8, 0xbf, 0xf6, 0x6f, 0x48, 0x1a, 0x5f, 0xe7, 0xb6, 0xbe, 0xfe, 0xcd, 0x06, 0x6c,
	0xbf, 0x1d, 0xa2, 0x4f, 0x7f, 0x15, 0x6f, 0x5d, 0x8b, 0x70, 0x43, 0xe7, 0x0f, 0x13, 0x4c, 0x49,
	0xd1, 0x9b, 0x4e, 0xba, 0x85, 0xd9, 0x52, 0xcc, 0x1b, 0xaa, 0x67, 0x8b, 0x3c, 0x1c, 0x9c, 0x86,
	0x44, 0xf5, 0x6c, 0x63, 0xe9, 0xe1, 0xe8, 0xd3, 0x90, 0x60, 0xe5, 0x8c, 0xb6, 0xa1, 0x14, 0x05,
	0x67, 0x84, 0xa9, 0x6e, 0x56, 0x70, 0xbe, 0x40, 0x9f, 0xc2, 0x66, 0x1c, 0x08, 0x7a, 0x41, 0xfc,
	0x73, 0x71, 0xe9, 0xa7, 0x01, 0x0d, 0x55, 0x43, 0x4d, 0x5c, 0xcb, 0xd5, 0x2f, 0xc5, 0x65, 0x2f,
	0xa0, 0x21, 0xaa, 0xc3, 0xad, 0x39, 0x3f, 0x46, 0x06, 0x84, 0x5e, 0x90, 0xd0, 0x2e, 0x2b, 0xdf,
	0xad, 0xa9, 0x2f, 0xd6, 0x06, 0xd9, 0x27, 0xed, 0x3f, 0x24, 0xc4, 0x4f, 0x98, 0xcf, 0xc8, 0xa9,
	0x1c, 0x51, 0x95, 0xf9, 0x80, 0x63, 0x42, 0xba, 0x0c, 0x2b, 0x03, 0xfa, 0x16, 0x2a, 0xd2, 0x53,
	0x50, 0xc2, 0xec, 0xaa, 0xfa, 0x2f, 0x67, 0xd9, 0xa1, 0x27, 0xc4, 0xa3, 0x84, 0xe1, 0xf2, 0x30,
	0x17, 0x16, 0x29, 0x01, 0x37, 0xa0, 0xc4, 0x02, 0xa7, 0xb7, 0x17, 0x39, 0xbd, 0x40, 0x42, 0xfb,
	0x1a, 0x09, 0x6f, 0xcb, 0xfd, 0x94, 0xac, 0xb6, 0xef, 0x29, 0x4b, 0x49, 0x91, 0x7a, 0x9e, 0xec,
	0xb7, 0x77, 0x8d, 0xbd, 0xda, 0xbf, 0x92, 0xfd, 0x8e, 0xb2, 0x4c, 0xc9, 0xee, 0x40, 0x2d, 0xdf,
	0x6a, 0x4e, 0xce, 0x55, 0x1d, 0x77, 0x55, 0x1d, 0x6b, 0x4a, 0xd9, 0x27, 0xe7, 0x9d, 0x2c, 0x72,
	0xfe, 0x36, 0xa0, 0xa4, 0x26, 0x24, 0xda, 0x80, 0x02, 0x0d, 0x35, 0x89, 0x0a, 0x34, 0x7c, 0x27,
	0x81, 0x66, 0x84, 0x2b, 0x2e, 0x10, 0xee, 0x3f, 0xb1, 0xe7, 0x3e, 0xac, 0x8d, 0x69, 0x44, 0x85,
	0x9f, 0x32, 0x3a, 0x20, 0x8a, 0x43, 0x26, 0x06, 0xa5, 0xea, 0x49, 0x0d, 0xfa, 0x08, 0xd6, 0xa3,
	0x60, 0xe2, 0x9f, 0x67, 0x41, 0x2c, 0xa8, 0xb8, 0xd4, 0x2c, 0x5a, 0x8b, 0x82, 0xc9, 0x4b, 0xad,
	0x42, 0x4f, 0xc0, 0x14, 0x97, 0x29, 0x51, 0xa4, 0xd9, 0x38, 0xf8, 0xf8, 0x7d, 0x57, 0x81, 0x77,
	0x99, 0x12, 0xac, 0x22, 0xf6, 0x6d, 0x30, 0x65, 0x2d, 0xa8, 0x0c, 0xc5, 0xa7, 0xae, 0x9c, 0x7b,
	0x65, 0x28, 0x36, 0xfb, 0x2f, 0x2c, 0x63, 0xbf, 0x0b, 0x65, 0xcd, 0x05, 0x54, 0x01, 0xf3, 0x69,
	0xc0, 0x89, 0xb5, 0x22, 0xa5, 0x3e, 0x6e, 0x1f, 0x58, 0x86, 0x96, 0x1e, 0x59, 0x05, 0x2d, 0x7d,
	0x65, 0x15, 0xb5, 0xf4, 0xb5, 0x65, 0x6a, 0xe9, 0xb1, 0x55, 0x92, 0x52, 0xbb, 0x8f, 0xdb, 0xd6,
	0xea, 0xfe, 0x77, 0x50, 0x9d, 0x66, 0x47, 0x55, 0x28, 0x9d, 0xb8, 0x6d, 0xd7, 0xb3, 0x56, 0xd0,
	0x5d, 0xb8, 0xe5, 0xb6, 0xdb, 0xad, 0x23, 0x57, 0xce, 0xe8, 0x2e, 0xd6, 0x03, 0xd5, 0x32, 0x50,
	0x0d, 0xaa, 0xbd, 0x6e, 0xdf, 0xf3, 0xbb, 0x9d, 0x93, 0x1f, 0xad, 0xc2, 0xc1, 0x5f, 0x06, 0xac,
	0xf7, 0xe5, 0xbf, 0x3c, 0xa7, 0x5c, 0x24, 0xec, 0x12, 0xfd, 0x0c, 0x95, 0xab, 0x47, 0x0f, 0x5a,
	0x76, 0x1b, 0x5d, 0x7b, 0x19, 0xed, 0xec, 0xbd, 0xe7, 0xce, 0x9b, 0x3d, 0x81, 0x06, 0xea, 0x9a,
	0xd0, 0x4f, 0x16, 0xf4, 0xc5, 0x92, 0xb8, 0xb7, 0x5e, 0x36, 0x3b, 0x9f, 0x7c, 0xd0, 0xed, 0xfe,
	0xc0, 0x78, 0xfa, 0xe2, 0x27, 0xf7, 0x0d, 0x15, 0xa3, 0xec, 0xb4, 0x3e, 0x48, 0xa2, 0x86, 0x0a,
	0xfa, 0x92, 0x26, 0x5a, 0xd0, 0x0f, 0xc7, 0xf4, 0xb4, 0xf1, 0xce, 0x87, 0xe4, 0x37, 0xe9, 0xe9,
	0x74, 0x79, 0xba, 0xaa, 0x8e, 0xe4, 0xa3, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x3c, 0x23,
	0xc0, 0x78, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SerumHistoryClient is the client API for SerumHistory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SerumHistoryClient interface {
	GetFills(ctx context.Context, in *GetFillsRequest, opts ...grpc.CallOption) (*FillsResponse, error)
	TrackOrder(ctx context.Context, in *TrackOrderRequest, opts ...grpc.CallOption) (SerumHistory_TrackOrderClient, error)
}

type serumHistoryClient struct {
	cc grpc.ClientConnInterface
}

func NewSerumHistoryClient(cc grpc.ClientConnInterface) SerumHistoryClient {
	return &serumHistoryClient{cc}
}

func (c *serumHistoryClient) GetFills(ctx context.Context, in *GetFillsRequest, opts ...grpc.CallOption) (*FillsResponse, error) {
	out := new(FillsResponse)
	err := c.cc.Invoke(ctx, "/dfuse.solana.serumhist.v1.SerumHistory/GetFills", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serumHistoryClient) TrackOrder(ctx context.Context, in *TrackOrderRequest, opts ...grpc.CallOption) (SerumHistory_TrackOrderClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SerumHistory_serviceDesc.Streams[0], "/dfuse.solana.serumhist.v1.SerumHistory/TrackOrder", opts...)
	if err != nil {
		return nil, err
	}
	x := &serumHistoryTrackOrderClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type SerumHistory_TrackOrderClient interface {
	Recv() (*OrderState, error)
	grpc.ClientStream
}

type serumHistoryTrackOrderClient struct {
	grpc.ClientStream
}

func (x *serumHistoryTrackOrderClient) Recv() (*OrderState, error) {
	m := new(OrderState)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SerumHistoryServer is the server API for SerumHistory service.
type SerumHistoryServer interface {
	GetFills(context.Context, *GetFillsRequest) (*FillsResponse, error)
	TrackOrder(*TrackOrderRequest, SerumHistory_TrackOrderServer) error
}

// UnimplementedSerumHistoryServer can be embedded to have forward compatible implementations.
type UnimplementedSerumHistoryServer struct {
}

func (*UnimplementedSerumHistoryServer) GetFills(ctx context.Context, req *GetFillsRequest) (*FillsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFills not implemented")
}
func (*UnimplementedSerumHistoryServer) TrackOrder(req *TrackOrderRequest, srv SerumHistory_TrackOrderServer) error {
	return status.Errorf(codes.Unimplemented, "method TrackOrder not implemented")
}

func RegisterSerumHistoryServer(s *grpc.Server, srv SerumHistoryServer) {
	s.RegisterService(&_SerumHistory_serviceDesc, srv)
}

func _SerumHistory_GetFills_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFillsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SerumHistoryServer).GetFills(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/dfuse.solana.serumhist.v1.SerumHistory/GetFills",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SerumHistoryServer).GetFills(ctx, req.(*GetFillsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SerumHistory_TrackOrder_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TrackOrderRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SerumHistoryServer).TrackOrder(m, &serumHistoryTrackOrderServer{stream})
}

type SerumHistory_TrackOrderServer interface {
	Send(*OrderState) error
	grpc.ServerStream
}

type serumHistoryTrackOrderServer struct {
	grpc.ServerStream
}

func (x *serumHistoryTrackOrderServer) Send(m *OrderState) error {
	return x.ServerStream.SendMsg(m)
}

var _SerumHistory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dfuse.solana.serumhist.v1.SerumHistory",
	HandlerType: (*SerumHistoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFills",
			Handler:    _SerumHistory_GetFills_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "TrackOrder",
			Handler:       _SerumHistory_TrackOrder_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dfuse/solana/serumhist/v1/serumhist.proto",
}
